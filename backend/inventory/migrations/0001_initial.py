# Generated by Django 5.2.4 on 2025-07-19 22:13

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0004_alter_company_created_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HSCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='HS Code (e.g., 8471.30.00)', max_length=20)),
                ('description', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hs_codes', to='common.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'HS Code',
                'verbose_name_plural': 'HS Codes',
                'db_table': 'hs_codes',
                'ordering': ['code'],
                'unique_together': {('company', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='common.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('hs_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='inventory.hscode')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
                'ordering': ['name'],
                'unique_together': {('company', 'hs_code', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Product SKU/Code', max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_of_measure', models.CharField(choices=[('pcs', 'Pieces'), ('kg', 'Kilograms'), ('ltr', 'Liters'), ('mtr', 'Meters'), ('sqm', 'Square Meters'), ('cbm', 'Cubic Meters'), ('box', 'Box'), ('carton', 'Carton'), ('dozen', 'Dozen'), ('pack', 'Pack'), ('set', 'Set'), ('roll', 'Roll'), ('sheet', 'Sheet'), ('ton', 'Ton'), ('gram', 'Gram')], default='pcs', max_length=20)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('cost_price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('selling_price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('current_stock', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=15)),
                ('minimum_stock', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('maximum_stock', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('gst_rate', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='GST rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='inventory.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='common.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products',
                'ordering': ['code', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StockInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('export', 'Export'), ('import', 'Import'), ('sale_return', 'Sale Return'), ('purchase_return', 'Purchase Return'), ('adjustment', 'Stock Adjustment')], max_length=20)),
                ('invoice_number', models.CharField(help_text='Auto-generated invoice number', max_length=50)),
                ('invoice_date', models.DateField()),
                ('party_name', models.CharField(help_text='Supplier/Customer name', max_length=255)),
                ('party_address', models.TextField(blank=True, null=True)),
                ('party_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_number', models.CharField(blank=True, help_text='External reference/PO number', max_length=100, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('total_gst', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_invoices', to='common.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_stock_invoices', to=settings.AUTH_USER_MODEL)),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_invoices', to='common.financialyear')),
            ],
            options={
                'verbose_name': 'Stock Invoice',
                'verbose_name_plural': 'Stock Invoices',
                'db_table': 'stock_invoices',
                'ordering': ['-invoice_date', '-invoice_number'],
            },
        ),
        migrations.CreateModel(
            name='StockInvoiceLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('total_value', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('gst_rate', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('gst_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('description', models.TextField(blank=True, help_text='Description for this line item', null=True)),
                ('line_number', models.PositiveIntegerField(help_text='Line sequence number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_movements', to='inventory.product')),
                ('stock_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='inventory.stockinvoice')),
            ],
            options={
                'verbose_name': 'Stock Invoice Line Item',
                'verbose_name_plural': 'Stock Invoice Line Items',
                'db_table': 'stock_invoice_line_items',
                'ordering': ['line_number'],
            },
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('company', 'name'), name='unique_product_name_per_company'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(condition=models.Q(('maximum_stock__gte', models.F('minimum_stock'))), name='max_stock_gte_min_stock'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('company', 'code')},
        ),
        migrations.AlterUniqueTogether(
            name='stockinvoice',
            unique_together={('company', 'financial_year', 'invoice_type', 'invoice_number')},
        ),
        migrations.AlterUniqueTogether(
            name='stockinvoicelineitem',
            unique_together={('stock_invoice', 'line_number')},
        ),
    ]
