# Generated by Django 5.2.4 on 2025-07-17 11:37

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0001_initial'),
        ('common', '0003_remove_financialyear_is_active_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_type', models.CharField(choices=[('cash', 'Cash Voucher'), ('bank', 'Bank Voucher'), ('journal', 'Journal Voucher')], max_length=20)),
                ('voucher_number', models.CharField(help_text='Auto-generated voucher number', max_length=50)),
                ('voucher_date', models.DateField()),
                ('narration', models.TextField(help_text='Description of the transaction')),
                ('reference', models.CharField(blank=True, help_text='External reference number', max_length=255, null=True)),
                ('is_posted', models.BooleanField(default=False, help_text='Whether voucher is posted to accounts')),
                ('is_approved', models.BooleanField(default=False, help_text='Whether voucher is approved')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_vouchers', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vouchers', to='common.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_vouchers', to=settings.AUTH_USER_MODEL)),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vouchers', to='common.financialyear')),
            ],
            options={
                'verbose_name': 'Voucher',
                'verbose_name_plural': 'Vouchers',
                'db_table': 'vouchers',
                'ordering': ['-voucher_date', '-voucher_number'],
                'unique_together': {('company', 'financial_year', 'voucher_type', 'voucher_number')},
            },
        ),
        migrations.CreateModel(
            name='VoucherLineEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('credit_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('description', models.TextField(blank=True, help_text='Description for this line entry', null=True)),
                ('line_number', models.PositiveIntegerField(help_text='Line sequence number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='voucher_entries', to='accounting.chartofaccounts')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_entries', to='accounting.voucher')),
            ],
            options={
                'verbose_name': 'Voucher Line Entry',
                'verbose_name_plural': 'Voucher Line Entries',
                'db_table': 'voucher_line_entries',
                'ordering': ['line_number'],
                'constraints': [models.CheckConstraint(condition=models.Q(('debit_amount__gt', 0), ('credit_amount__gt', 0), _negated=True), name='not_both_debit_and_credit'), models.CheckConstraint(condition=models.Q(('debit_amount__gt', 0), ('credit_amount__gt', 0), _connector='OR'), name='either_debit_or_credit')],
                'unique_together': {('voucher', 'line_number')},
            },
        ),
    ]
